[
  {
    "objectID": "3_LinearRegression.html",
    "href": "3_LinearRegression.html",
    "title": "Linear Regression in R",
    "section": "",
    "text": "Plotting Linear Regression with plot()\nFigure 1 illustrates the scatterplot of the two variables (Weight vs Height) along with a linear regression line and includes summary statistics for the linear regression model including:\n\n\nCoefficients: Explain the meaning of the slope and intercept in the context of your data.\n\nSignificance Levels: Discuss the p-values and what they indicate about the relationships.\n\nR-squared value: Explain how much of the variance in the dependent variable is explained by the model.\n\n\nCodeheight &lt;- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)  #weight\nweight &lt;- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48) #height\n\n# Apply the lm() function.\nrelation &lt;- lm(weight~height)\n\nplot(height,weight,col = \"blue\",\n     abline(lm(weight~height)),cex = 1.3,pch = 16,\n     xlab = \"Height(cm)\", ylab = \"Weight(Kg)\")\n\n# print statistics\nprint(summary(relation))\n\n\nCall:\nlm(formula = weight ~ height)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.3002 -1.6629  0.0412  1.8944  3.9775 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -38.45509    8.04901  -4.778  0.00139 ** \nheight        0.67461    0.05191  12.997 1.16e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.253 on 8 degrees of freedom\nMultiple R-squared:  0.9548,    Adjusted R-squared:  0.9491 \nF-statistic: 168.9 on 1 and 8 DF,  p-value: 1.164e-06\n\n\n\n\nFigure 1: Weight vs Height Linear Regression Model (using plot)\n\n\n\n\n\n\n\nPlotting Linear Regression with plot()\nFigure 2 illustrates the same data as Figure 1 but uses ggplot() to plot the output of the model.\n\nCode# convert to a dataframe to use ggplot()\ndata &lt;- data.frame(\n  height &lt;- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131),\n  weight &lt;- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)\n)\n\n# Run linear regression\nmodel &lt;- lm(weight~height, data = data)\n\n# View the summary of the model\nsummary(model)\n\n\nCall:\nlm(formula = weight ~ height, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.3002 -1.6629  0.0412  1.8944  3.9775 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -38.45509    8.04901  -4.778  0.00139 ** \nheight        0.67461    0.05191  12.997 1.16e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.253 on 8 degrees of freedom\nMultiple R-squared:  0.9548,    Adjusted R-squared:  0.9491 \nF-statistic: 168.9 on 1 and 8 DF,  p-value: 1.164e-06\n\nCode#using ggplot\np &lt;- ggplot(data, aes(x = height, y = weight)) +\n  geom_point() +\n  labs(\n    x = \"Height(cm)\",\n    y = \"Weight(Kg)\"\n  ) +\n  theme_minimal()\n\n# Add the linear regression line\np + geom_smooth(method = \"lm\", se = FALSE, color = \"blue\")\n\n\n\nFigure 2: Weight vs Height Linear Regression Model (using ggplot)\n\n\n\n\n\n\n\n\n\nCitationBibTeX citation:@online{mcguinness2023,\n  author = {McGuinness, Niall},\n  title = {Linear {Regression} in {R}},\n  date = {2023-12-16},\n  langid = {en-GB}\n}\nFor attribution, please cite this work as:\nMcGuinness, Niall. 2023. “Linear Regression in R.” December\n16, 2023."
  },
  {
    "objectID": "2023_MSC_DataAnalytics_Quarto_Demo.html",
    "href": "2023_MSC_DataAnalytics_Quarto_Demo.html",
    "title": "Quarto Markdown Demo",
    "section": "",
    "text": "This example illustrates some useful functionality within Quarto.\n\n\n\nOPML Header Options header\nPandoc Syntax Highlighting Examples\nCode Formatting\n\nIt’s important to remember that we do not need to specify all the options in the OPML header above. They are included purely for demonstration purposes. Minimally, we could just give the document a title and leave it at that!\nWhen you’re setting a value in the OPML header above hit the TAB key after the colon and that will bring up the menu of possible choices for a particular field, as shown in Figure 1.\n\n\n\n\n\nFigure 1: Press TAB to show field options\n\n\nHowever, do not forget to leave a SPACE after the colon for each field. For more information on adding images/figures see this link.\n\nCross-references make it easier for readers to navigate your document by providing numbered references and hyperlinks to various entities like figures and tables.\n\nFigure 2 explores the temperature from May 2023 to September 2023.\n\nCode# this was generated using esquisse\nggplot(airquality) +\n  aes(x = \"\", y = Temp, fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", direction = 1) +\n  labs(\n    x = \"Month Index (May to September)\",\n    y = \"Temperature(°C)\",\n    fill = \"Month\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nWe can add plots with multiple plot components (e.g. a, b,…) as shown in Figure 3\n\nCodeggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n#| label: fig-airquality\n#| fig-cap: Temperature, Wind, and Ozone level.\n#| fig-subcap: A subcaption for this plot 2\n#| fig-align: center\n#| fig-dpi: 100\n#| fig-format: jpeg\n#| echo: true\n\nggplot(airquality, aes(Wind, Temp)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n\n\n\n\n\n\n\n(a) A subcaption for this plot 1\n\n\n\n\n\n\n\n\n\n(b) A subcaption for this plot 1\n\n\n\n\n\nFigure 3: Temperature, Wind, and Ozone level.\n\n\n\nNotice that we can add annotations in the R chunk (i.e. the grey sections that contains R code) to do things like set caption, subcaption, width, dpi, aspect ratio, etc.\nTable 1 presents….\n\nCodeknitr::kable(head(airquality))\n\n\nTable 1: Air Quality Heads\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\n\n\nWe can also do override the settings in the OPML header above and turn source code off with echo set to false, turn off warnings, and disable caching for a specific chunk of code.\nTable 2 presents….\n\nCodeknitr::kable(tail(airquality))\n\n\nTable 2: Air Quality Tails\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n148\n14\n20\n16.6\n63\n9\n25\n\n\n149\n30\n193\n6.9\n70\n9\n26\n\n\n150\nNA\n145\n13.2\n77\n9\n27\n\n\n151\n14\n191\n14.3\n75\n9\n28\n\n\n152\n18\n131\n8.0\n76\n9\n29\n\n\n153\n20\n223\n11.5\n68\n9\n30\n\n\n\n\n\n\n\n\nFinally, notice also how the table and figure numbers are automatically set by Quarto. If we re-arrange these elements then the numbers will update automatically.\n\nQuarto will use Pandoc to automatically generate footnotes in a number of styles.\n\nWhen considering the impact of Sea surface temperature1 on Ozone2 level…\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles.\n\nAccording to Smith (2023) we may consider….and is proven (Smith 2023; Doe and Johnson 2021). A number of online sources (Quarto Development Team 2023) report…\nTo add a bibliography all we need to do is the following:\n\nCreate a references.bib file in the folder as this document.\nAdd a reference to this bib file in the OPML header above.\nPopulate the bib file with BibTeX compatible citations which you can easily generate using free online tools"
  },
  {
    "objectID": "2023_MSC_DataAnalytics_Quarto_Demo.html#quarto-document-overview",
    "href": "2023_MSC_DataAnalytics_Quarto_Demo.html#quarto-document-overview",
    "title": "Quarto Markdown Demo",
    "section": "",
    "text": "This example illustrates some useful functionality within Quarto.\n\n\n\nOPML Header Options header\nPandoc Syntax Highlighting Examples\nCode Formatting\n\nIt’s important to remember that we do not need to specify all the options in the OPML header above. They are included purely for demonstration purposes. Minimally, we could just give the document a title and leave it at that!\nWhen you’re setting a value in the OPML header above hit the TAB key after the colon and that will bring up the menu of possible choices for a particular field, as shown in Figure 1.\n\n\n\n\n\nFigure 1: Press TAB to show field options\n\n\nHowever, do not forget to leave a SPACE after the colon for each field. For more information on adding images/figures see this link.\n\nCross-references make it easier for readers to navigate your document by providing numbered references and hyperlinks to various entities like figures and tables.\n\nFigure 2 explores the temperature from May 2023 to September 2023.\n\nCode# this was generated using esquisse\nggplot(airquality) +\n  aes(x = \"\", y = Temp, fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", direction = 1) +\n  labs(\n    x = \"Month Index (May to September)\",\n    y = \"Temperature(°C)\",\n    fill = \"Month\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nWe can add plots with multiple plot components (e.g. a, b,…) as shown in Figure 3\n\nCodeggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n#| label: fig-airquality\n#| fig-cap: Temperature, Wind, and Ozone level.\n#| fig-subcap: A subcaption for this plot 2\n#| fig-align: center\n#| fig-dpi: 100\n#| fig-format: jpeg\n#| echo: true\n\nggplot(airquality, aes(Wind, Temp)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n\n\n\n\n\n\n\n(a) A subcaption for this plot 1\n\n\n\n\n\n\n\n\n\n(b) A subcaption for this plot 1\n\n\n\n\n\nFigure 3: Temperature, Wind, and Ozone level.\n\n\n\nNotice that we can add annotations in the R chunk (i.e. the grey sections that contains R code) to do things like set caption, subcaption, width, dpi, aspect ratio, etc.\nTable 1 presents….\n\nCodeknitr::kable(head(airquality))\n\n\nTable 1: Air Quality Heads\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\n\n\nWe can also do override the settings in the OPML header above and turn source code off with echo set to false, turn off warnings, and disable caching for a specific chunk of code.\nTable 2 presents….\n\nCodeknitr::kable(tail(airquality))\n\n\nTable 2: Air Quality Tails\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n148\n14\n20\n16.6\n63\n9\n25\n\n\n149\n30\n193\n6.9\n70\n9\n26\n\n\n150\nNA\n145\n13.2\n77\n9\n27\n\n\n151\n14\n191\n14.3\n75\n9\n28\n\n\n152\n18\n131\n8.0\n76\n9\n29\n\n\n153\n20\n223\n11.5\n68\n9\n30\n\n\n\n\n\n\n\n\nFinally, notice also how the table and figure numbers are automatically set by Quarto. If we re-arrange these elements then the numbers will update automatically.\n\nQuarto will use Pandoc to automatically generate footnotes in a number of styles.\n\nWhen considering the impact of Sea surface temperature1 on Ozone2 level…\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles.\n\nAccording to Smith (2023) we may consider….and is proven (Smith 2023; Doe and Johnson 2021). A number of online sources (Quarto Development Team 2023) report…\nTo add a bibliography all we need to do is the following:\n\nCreate a references.bib file in the folder as this document.\nAdd a reference to this bib file in the OPML header above.\nPopulate the bib file with BibTeX compatible citations which you can easily generate using free online tools"
  },
  {
    "objectID": "2023_MSC_DataAnalytics_Quarto_Demo.html#additional-reading",
    "href": "2023_MSC_DataAnalytics_Quarto_Demo.html#additional-reading",
    "title": "Quarto Markdown Demo",
    "section": "Additional Reading",
    "text": "Additional Reading\n\nHTML Theming\nYouTube - Hello, Quarto: A World of Possibilities (for Reproducible Publishing)\nYouTube - Beautiful reports and presentations with Quarto"
  },
  {
    "objectID": "2023_MSC_DataAnalytics_Quarto_Demo.html#footnotes",
    "href": "2023_MSC_DataAnalytics_Quarto_Demo.html#footnotes",
    "title": "Quarto Markdown Demo",
    "section": "Footnotes",
    "text": "Footnotes\n\nSea surface temperature (SST), or ocean surface temperature, is the ocean temperature close to the surface.↩︎\nOzone is a molecule composed of three oxygen atoms.↩︎"
  },
  {
    "objectID": "1 - Intro to Quarto.html",
    "href": "1 - Intro to Quarto.html",
    "title": "Quarto Markdown Demo",
    "section": "",
    "text": "This example illustrates some useful functionality within Quarto.\n\n\n\nOPML Header Options header\nPandoc Syntax Highlighting Examples\nCode Formatting\n\nIt’s important to remember that we do not need to specify all the options in the OPML header above. They are included purely for demonstration purposes. Minimally, we could just give the document a title and leave it at that!\nWhen you’re setting a value in the OPML header above hit the TAB key after the colon and that will bring up the menu of possible choices for a particular field, as shown in Figure 1.\n\n\n\n\n\nFigure 1: Press TAB to show field options\n\n\nHowever, do not forget to leave a SPACE after the colon for each field. For more information on adding images/figures see this link.\n\nCross-references make it easier for readers to navigate your document by providing numbered references and hyperlinks to various entities like figures and tables.\n\nFigure 2 explores the temperature from May 2023 to September 2023.\n\nCode# this was generated using esquisse\nggplot(airquality) +\n  aes(x = \"\", y = Temp, fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", direction = 1) +\n  labs(\n    x = \"Month Index (May to September)\",\n    y = \"Temperature(°C)\",\n    fill = \"Month\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nWe can add plots with multiple plot components (e.g. a, b,…) as shown in Figure 3\n\nCodeggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n#| label: fig-airquality\n#| fig-cap: Temperature, Wind, and Ozone level.\n#| fig-subcap: A subcaption for this plot 2\n#| fig-align: center\n#| fig-dpi: 100\n#| fig-format: jpeg\n#| echo: true\n\nggplot(airquality, aes(Wind, Temp)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n\n\n\n\n\n\n\n(a) A subcaption for this plot 1\n\n\n\n\n\n\n\n\n\n(b) A subcaption for this plot 1\n\n\n\n\n\nFigure 3: Temperature, Wind, and Ozone level.\n\n\n\nNotice that we can add annotations in the R chunk (i.e. the grey sections that contains R code) to do things like set caption, subcaption, width, dpi, aspect ratio, etc.\nTable 1 presents….\n\nCodeknitr::kable(head(airquality))\n\n\nTable 1: Air Quality Heads\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\n\n\nWe can also do override the settings in the OPML header above and turn source code off with echo set to false, turn off warnings, and disable caching for a specific chunk of code.\nTable 2 presents….\n\nCodeknitr::kable(tail(airquality))\n\n\nTable 2: Air Quality Tails\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n148\n14\n20\n16.6\n63\n9\n25\n\n\n149\n30\n193\n6.9\n70\n9\n26\n\n\n150\nNA\n145\n13.2\n77\n9\n27\n\n\n151\n14\n191\n14.3\n75\n9\n28\n\n\n152\n18\n131\n8.0\n76\n9\n29\n\n\n153\n20\n223\n11.5\n68\n9\n30\n\n\n\n\n\n\n\n\nFinally, notice also how the table and figure numbers are automatically set by Quarto. If we re-arrange these elements then the numbers will update automatically.\n\nQuarto will use Pandoc to automatically generate footnotes in a number of styles.\n\nWhen considering the impact of Sea surface temperature1 on Ozone2 level…\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles.\n\nAccording to Smith (2023) we may consider….and is proven (Smith 2023; Doe and Johnson 2021). A number of online sources (Quarto Development Team 2023) report…\nTo add a bibliography all we need to do is the following:\n\nCreate a references.bib file in the folder as this document.\nAdd a reference to this bib file in the OPML header above.\nPopulate the bib file with BibTeX compatible citations which you can easily generate using free online tools"
  },
  {
    "objectID": "1 - Intro to Quarto.html#quarto-document-overview",
    "href": "1 - Intro to Quarto.html#quarto-document-overview",
    "title": "Quarto Markdown Demo",
    "section": "",
    "text": "This example illustrates some useful functionality within Quarto.\n\n\n\nOPML Header Options header\nPandoc Syntax Highlighting Examples\nCode Formatting\n\nIt’s important to remember that we do not need to specify all the options in the OPML header above. They are included purely for demonstration purposes. Minimally, we could just give the document a title and leave it at that!\nWhen you’re setting a value in the OPML header above hit the TAB key after the colon and that will bring up the menu of possible choices for a particular field, as shown in Figure 1.\n\n\n\n\n\nFigure 1: Press TAB to show field options\n\n\nHowever, do not forget to leave a SPACE after the colon for each field. For more information on adding images/figures see this link.\n\nCross-references make it easier for readers to navigate your document by providing numbered references and hyperlinks to various entities like figures and tables.\n\nFigure 2 explores the temperature from May 2023 to September 2023.\n\nCode# this was generated using esquisse\nggplot(airquality) +\n  aes(x = \"\", y = Temp, fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", direction = 1) +\n  labs(\n    x = \"Month Index (May to September)\",\n    y = \"Temperature(°C)\",\n    fill = \"Month\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nWe can add plots with multiple plot components (e.g. a, b,…) as shown in Figure 3\n\nCodeggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n#| label: fig-airquality\n#| fig-cap: Temperature, Wind, and Ozone level.\n#| fig-subcap: A subcaption for this plot 2\n#| fig-align: center\n#| fig-dpi: 100\n#| fig-format: jpeg\n#| echo: true\n\nggplot(airquality, aes(Wind, Temp)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  theme_minimal() +\n  theme(\n    axis.title.y = element_text(size = 12L),\n    axis.title.x = element_text(size = 12L)\n  ) \n\n\n\n\n\n\n\n\n(a) A subcaption for this plot 1\n\n\n\n\n\n\n\n\n\n(b) A subcaption for this plot 1\n\n\n\n\n\nFigure 3: Temperature, Wind, and Ozone level.\n\n\n\nNotice that we can add annotations in the R chunk (i.e. the grey sections that contains R code) to do things like set caption, subcaption, width, dpi, aspect ratio, etc.\nTable 1 presents….\n\nCodeknitr::kable(head(airquality))\n\n\nTable 1: Air Quality Heads\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\n\n\nWe can also do override the settings in the OPML header above and turn source code off with echo set to false, turn off warnings, and disable caching for a specific chunk of code.\nTable 2 presents….\n\nCodeknitr::kable(tail(airquality))\n\n\nTable 2: Air Quality Tails\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n148\n14\n20\n16.6\n63\n9\n25\n\n\n149\n30\n193\n6.9\n70\n9\n26\n\n\n150\nNA\n145\n13.2\n77\n9\n27\n\n\n151\n14\n191\n14.3\n75\n9\n28\n\n\n152\n18\n131\n8.0\n76\n9\n29\n\n\n153\n20\n223\n11.5\n68\n9\n30\n\n\n\n\n\n\n\n\nFinally, notice also how the table and figure numbers are automatically set by Quarto. If we re-arrange these elements then the numbers will update automatically.\n\nQuarto will use Pandoc to automatically generate footnotes in a number of styles.\n\nWhen considering the impact of Sea surface temperature1 on Ozone2 level…\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles.\n\nAccording to Smith (2023) we may consider….and is proven (Smith 2023; Doe and Johnson 2021). A number of online sources (Quarto Development Team 2023) report…\nTo add a bibliography all we need to do is the following:\n\nCreate a references.bib file in the folder as this document.\nAdd a reference to this bib file in the OPML header above.\nPopulate the bib file with BibTeX compatible citations which you can easily generate using free online tools"
  },
  {
    "objectID": "1 - Intro to Quarto.html#additional-reading",
    "href": "1 - Intro to Quarto.html#additional-reading",
    "title": "Quarto Markdown Demo",
    "section": "Additional Reading",
    "text": "Additional Reading\n\nHTML Theming\nYouTube - Hello, Quarto: A World of Possibilities (for Reproducible Publishing)\nYouTube - Beautiful reports and presentations with Quarto"
  },
  {
    "objectID": "1 - Intro to Quarto.html#footnotes",
    "href": "1 - Intro to Quarto.html#footnotes",
    "title": "Quarto Markdown Demo",
    "section": "Footnotes",
    "text": "Footnotes\n\nSea surface temperature (SST), or ocean surface temperature, is the ocean temperature close to the surface.↩︎\nOzone is a molecule composed of three oxygen atoms.↩︎"
  },
  {
    "objectID": "1_Intro_To_Quarto.html",
    "href": "1_Intro_To_Quarto.html",
    "title": "Introduction to Quarto",
    "section": "",
    "text": "This example illustrates some useful functionality within Quarto.\n\n\n\nOPML Header Options header\nPandoc Syntax Highlighting Examples\nCode Formatting\n\nIt’s important to remember that we do not need to specify all the options in the OPML header above. They are included purely for demonstration purposes. Minimally, we could just give the document a title and leave it at that!\nWhen you’re setting a value in the OPML header above hit the TAB key after the colon and that will bring up the menu of possible choices for a particular field, as shown in Figure 1.\n\n\n\n\n\nFigure 1: Press TAB to show field options\n\n\nHowever, do not forget to leave a SPACE after the colon for each field. For more information on adding images/figures see this link.\n\nCross-references make it easier for readers to navigate your document by providing numbered references and hyperlinks to various entities like figures and tables.\n\nFigure 2 explores the temperature from May 2023 to September 2023.\n\nCode# month names for x-axis\nmonth.names &lt;- c(\"May\", \"June\", \"July\", \"August\", \"September\")\n\n# this was generated using esquisse\nggplot(airquality) +\n  aes(x = factor(Month, labels = month.names), \n      y = Temp, fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", direction = 1) +\n  labs(\n    x = \"Month\",\n    y = \"Temperature(°C)\",\n    fill = \"Month\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.title.x = element_text(margin = margin(t = 10, b = 10)),  # Adjust X axis title\n    axis.title.y = element_text(margin = margin(r = 10, l = 10))   # Adjust Y axis title\n  ) +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nWe can add plots with multiple plot components (e.g. a, b,…) as shown in Figure 3\nCodeggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n    labs(\n    x = \"Temperature(°C)\",\n    y = \"Ozone\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_text(margin = margin(t = 10, b = 10)),  # Adjust X axis title\n    axis.title.y = element_text(margin = margin(r = 10, l = 10))   # Adjust Y axis title\n  ) \n\n\nggplot(airquality, aes(Wind, Temp)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  labs(\n    x = \"Wind (kmph)\",\n    y = \"Temperature(°C)\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_text(margin = margin(t = 10, b = 10)),  # Adjust X axis title\n    axis.title.y = element_text(margin = margin(r = 10, l = 10))   # Adjust Y axis title\n  ) \n\n\n\n\n\n\n\n\n\n(a) A subcaption for plot 1\n\n\n\n\n\n\n\n\n\n(b) A subcaption for plot 2\n\n\n\n\n\n\nFigure 3: Temperature, Wind, and Ozone level.\n\n\nNotice that we can add annotations in the R chunk (i.e. the grey sections that contains R code) to do things like set caption, subcaption, width, dpi, aspect ratio, etc. We can learn more about Figures here.\nTable 1 presents the first rows of the airquality dataset using the kable library that comes with the tidyverse package ….\n\nCode# show the first 8 rows\nknitr::kable(head(airquality, 8))\n\n\nTable 1: Air Quality Heads\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n23\n299\n8.6\n65\n5\n7\n\n\n19\n99\n13.8\n59\n5\n8\n\n\n\n\n\n\n\n\nWe can also do override the settings in the OPML header above and turn source code off with echo set to false, turn off warnings, and disable caching for a specific chunk of code.\nTable 2 presents….\n\nCode# show the first 5 rows + pagination\nDT::datatable(airquality, options = list(pageLength = 5))\n\n\nTable 2: Air Quality Tails\n\n\n\n\n\n\n\n\n\nFinally, notice also how the table and figure numbers are automatically set by Quarto. If we re-arrange these elements then the numbers will update automatically.\n\nQuarto will use Pandoc to automatically generate footnotes in a number of styles.\n\nWhen considering the impact of Sea surface temperature1 on Ozone2 level…\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles.\n\nAccording to Smith (2023) we may consider….and is proven (Smith 2023; Doe and Johnson 2021). A number of online sources (Quarto Development Team 2023) report…\nTo add a bibliography all we need to do is the following:\n\nCreate a references.bib file in the same folder as this document (or add a path in the OPML header).\nAdd a reference to this bib file in the OPML header above.\nPopulate the bib file with BibTeX compatible citations which you can easily generate using free online tools"
  },
  {
    "objectID": "1_Intro_To_Quarto.html#quarto-document-overview",
    "href": "1_Intro_To_Quarto.html#quarto-document-overview",
    "title": "Introduction to Quarto",
    "section": "",
    "text": "This example illustrates some useful functionality within Quarto.\n\n\n\nOPML Header Options header\nPandoc Syntax Highlighting Examples\nCode Formatting\n\nIt’s important to remember that we do not need to specify all the options in the OPML header above. They are included purely for demonstration purposes. Minimally, we could just give the document a title and leave it at that!\nWhen you’re setting a value in the OPML header above hit the TAB key after the colon and that will bring up the menu of possible choices for a particular field, as shown in Figure 1.\n\n\n\n\n\nFigure 1: Press TAB to show field options\n\n\nHowever, do not forget to leave a SPACE after the colon for each field. For more information on adding images/figures see this link.\n\nCross-references make it easier for readers to navigate your document by providing numbered references and hyperlinks to various entities like figures and tables.\n\nFigure 2 explores the temperature from May 2023 to September 2023.\n\nCode# month names for x-axis\nmonth.names &lt;- c(\"May\", \"June\", \"July\", \"August\", \"September\")\n\n# this was generated using esquisse\nggplot(airquality) +\n  aes(x = factor(Month, labels = month.names), \n      y = Temp, fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", direction = 1) +\n  labs(\n    x = \"Month\",\n    y = \"Temperature(°C)\",\n    fill = \"Month\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.title.x = element_text(margin = margin(t = 10, b = 10)),  # Adjust X axis title\n    axis.title.y = element_text(margin = margin(r = 10, l = 10))   # Adjust Y axis title\n  ) +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nWe can add plots with multiple plot components (e.g. a, b,…) as shown in Figure 3\nCodeggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n    labs(\n    x = \"Temperature(°C)\",\n    y = \"Ozone\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_text(margin = margin(t = 10, b = 10)),  # Adjust X axis title\n    axis.title.y = element_text(margin = margin(r = 10, l = 10))   # Adjust Y axis title\n  ) \n\n\nggplot(airquality, aes(Wind, Temp)) + \n  geom_point() + \n  geom_smooth(method = \"loess\") +\n  labs(\n    x = \"Wind (kmph)\",\n    y = \"Temperature(°C)\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_text(margin = margin(t = 10, b = 10)),  # Adjust X axis title\n    axis.title.y = element_text(margin = margin(r = 10, l = 10))   # Adjust Y axis title\n  ) \n\n\n\n\n\n\n\n\n\n(a) A subcaption for plot 1\n\n\n\n\n\n\n\n\n\n(b) A subcaption for plot 2\n\n\n\n\n\n\nFigure 3: Temperature, Wind, and Ozone level.\n\n\nNotice that we can add annotations in the R chunk (i.e. the grey sections that contains R code) to do things like set caption, subcaption, width, dpi, aspect ratio, etc. We can learn more about Figures here.\nTable 1 presents the first rows of the airquality dataset using the kable library that comes with the tidyverse package ….\n\nCode# show the first 8 rows\nknitr::kable(head(airquality, 8))\n\n\nTable 1: Air Quality Heads\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n23\n299\n8.6\n65\n5\n7\n\n\n19\n99\n13.8\n59\n5\n8\n\n\n\n\n\n\n\n\nWe can also do override the settings in the OPML header above and turn source code off with echo set to false, turn off warnings, and disable caching for a specific chunk of code.\nTable 2 presents….\n\nCode# show the first 5 rows + pagination\nDT::datatable(airquality, options = list(pageLength = 5))\n\n\nTable 2: Air Quality Tails\n\n\n\n\n\n\n\n\n\nFinally, notice also how the table and figure numbers are automatically set by Quarto. If we re-arrange these elements then the numbers will update automatically.\n\nQuarto will use Pandoc to automatically generate footnotes in a number of styles.\n\nWhen considering the impact of Sea surface temperature1 on Ozone2 level…\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles.\n\nAccording to Smith (2023) we may consider….and is proven (Smith 2023; Doe and Johnson 2021). A number of online sources (Quarto Development Team 2023) report…\nTo add a bibliography all we need to do is the following:\n\nCreate a references.bib file in the same folder as this document (or add a path in the OPML header).\nAdd a reference to this bib file in the OPML header above.\nPopulate the bib file with BibTeX compatible citations which you can easily generate using free online tools"
  },
  {
    "objectID": "1_Intro_To_Quarto.html#additional-reading",
    "href": "1_Intro_To_Quarto.html#additional-reading",
    "title": "Introduction to Quarto",
    "section": "Additional Reading",
    "text": "Additional Reading\n\nHTML Theming\nYouTube - Hello, Quarto: A World of Possibilities (for Reproducible Publishing)\nYouTube - Beautiful reports and presentations with Quarto"
  },
  {
    "objectID": "1_Intro_To_Quarto.html#footnotes",
    "href": "1_Intro_To_Quarto.html#footnotes",
    "title": "Introduction to Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\nSea surface temperature (SST), or ocean surface temperature, is the ocean temperature close to the surface.↩︎\nOzone is a molecule composed of three oxygen atoms.↩︎"
  },
  {
    "objectID": "2_Interactive_Plots_With_Plotly.html",
    "href": "2_Interactive_Plots_With_Plotly.html",
    "title": "Interactive Plots with Plotly",
    "section": "",
    "text": "We can convert most plots generated using ggplot2 (even those made with Esquisse) to be interactive by doing the following:\n\nInclude the Plotly library.\nPass the ggplot() output into ggplotly().\n\n\nFigure 1 was generated using Esquisse on a separate simple R file (see 4_EsquisseScratch in the same folder as this file).\n\nCodep &lt;- ggplot(mtcars) +\n  aes(x = mpg, y = wt, size = wt) +\n  geom_point(shape = \"circle\", colour = \"#4682B4\") +\n  scale_color_colorblind() +\n  labs(\n    x = \"Fuel Consumption (tonnes)\", \n    y = \"Weight (kg)\") +\n  theme(\n    plot.title = element_text(size = 14L,\n    hjust = 0.5),\n    plot.subtitle = element_text(size = 12L,\n    hjust = 0.5)\n  )\n\nggplotly(p) \n\n\n\n\n\n\nFigure 1: Fuel Consumption vs Weight\n\n\n\n\nFigure 2 is the same plot from 1_Intro_To_Quarto with the addition of only 1 line of code (i.e. ggplotly(p))\n\nCode# month names for x-axis\nmonth.names &lt;- c(\"May\", \"June\", \"July\", \"August\", \"September\")\n\n# this was generated using esquisse\np &lt;- ggplot(airquality) +\n  aes(x = factor(Month, labels = month.names), \n      y = Temp, \n      fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", \n                       direction = 1) +\n  labs(\n    x = \"Month\",\n    y = \"Temperature(F)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\nggplotly(p)\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nFinally, Figure 3 illustrates a heat map with colours chosen from an interactive color palette picker site, Coolors and specified with with the scale_fill_gradient2() method commented out in the code below.\nWe also support color blind users by including scale_color_colorblind() and the ggthemes library above.\n\nCode# Dummy data\nx &lt;- LETTERS[1:12]\ny &lt;- paste0(\"var\", seq(1,12))\ndata &lt;- expand.grid(X=x, Y=y)\ndata$Z &lt;- runif(144, 0, 5)\n \n# Heatmap \np &lt;- ggplot(data, aes(X, Y, fill= Z)) + \n  geom_tile() +\n  # scale_color_colorblind() +\n  scale_fill_gradient2(\n    low = \"#184e77\", \n    high = \"#52b69a\") + \n   labs(\n    x = \"An x-axis label\",\n    y = \"A y-axis label\",\n    fill = \"Amazing Legend\"\n  )\n  \nggplotly(p)\n\n\n\n\n\n\nFigure 3: Some Data\n\n\n\n\nObviously, most of the plots generated with ggplot can be converted to this interactive format including:\n\n\nScatter Plots: Show relationships between two continuous variables.\n\nLine Plots: Useful for time series data or connecting points in order.\n\nBar Charts: Display categorical data, includes regular and stacked bar charts.\n\nHistograms: Show the distribution of a continuous variable.\n\nBox Plots: Display distribution of a variable, showing quartiles and outliers.\n\nViolin Plots: Similar to box plots, but include a kernel density estimation.\n\nHeatmaps: Represent data where colors denote values.\n\nFacetted Plots: Support interactive facets, breaking down data into multiple panels.\n\nError Bars and Confidence Intervals: Added to plots like scatter plots or bar charts to represent data uncertainty.\n\nArea Plots: Showcase quantitative data visually.\n\nDensity Plots: Visualize the distribution of a continuous variable."
  },
  {
    "objectID": "2_Interactive_Plots_With_Plotly.html#creating-interactive-plots-with-plotly",
    "href": "2_Interactive_Plots_With_Plotly.html#creating-interactive-plots-with-plotly",
    "title": "Interactive Plots with Plotly",
    "section": "",
    "text": "We can convert most plots generated using ggplot2 (even those made with Esquisse) to be interactive by doing the following:\n\nInclude the Plotly library.\nPass the ggplot() output into ggplotly().\n\n\nFigure 1 was generated using Esquisse on a separate simple R file (see 4_EsquisseScratch in the same folder as this file).\n\nCodep &lt;- ggplot(mtcars) +\n  aes(x = mpg, y = wt, size = wt) +\n  geom_point(shape = \"circle\", colour = \"#4682B4\") +\n  scale_color_colorblind() +\n  labs(\n    x = \"Fuel Consumption (tonnes)\", \n    y = \"Weight (kg)\") +\n  theme(\n    plot.title = element_text(size = 14L,\n    hjust = 0.5),\n    plot.subtitle = element_text(size = 12L,\n    hjust = 0.5)\n  )\n\nggplotly(p) \n\n\n\n\n\n\nFigure 1: Fuel Consumption vs Weight\n\n\n\n\nFigure 2 is the same plot from 1_Intro_To_Quarto with the addition of only 1 line of code (i.e. ggplotly(p))\n\nCode# month names for x-axis\nmonth.names &lt;- c(\"May\", \"June\", \"July\", \"August\", \"September\")\n\n# this was generated using esquisse\np &lt;- ggplot(airquality) +\n  aes(x = factor(Month, labels = month.names), \n      y = Temp, \n      fill = Month) +\n  geom_violin(adjust = 0.4, scale = \"area\") +\n  scale_fill_distiller(palette = \"RdYlBu\", \n                       direction = 1) +\n  labs(\n    x = \"Month\",\n    y = \"Temperature(F)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  facet_wrap(\n    vars(Month),\n    scales = \"free_x\",\n    ncol = 5L,\n    nrow = 1L\n  )\n\nggplotly(p)\n\n\n\n\n\n\nFigure 2: Temperature (Jan - June 2023).\n\n\n\n\nFinally, Figure 3 illustrates a heat map with colours chosen from an interactive color palette picker site, Coolors and specified with with the scale_fill_gradient2() method commented out in the code below.\nWe also support color blind users by including scale_color_colorblind() and the ggthemes library above.\n\nCode# Dummy data\nx &lt;- LETTERS[1:12]\ny &lt;- paste0(\"var\", seq(1,12))\ndata &lt;- expand.grid(X=x, Y=y)\ndata$Z &lt;- runif(144, 0, 5)\n \n# Heatmap \np &lt;- ggplot(data, aes(X, Y, fill= Z)) + \n  geom_tile() +\n  # scale_color_colorblind() +\n  scale_fill_gradient2(\n    low = \"#184e77\", \n    high = \"#52b69a\") + \n   labs(\n    x = \"An x-axis label\",\n    y = \"A y-axis label\",\n    fill = \"Amazing Legend\"\n  )\n  \nggplotly(p)\n\n\n\n\n\n\nFigure 3: Some Data\n\n\n\n\nObviously, most of the plots generated with ggplot can be converted to this interactive format including:\n\n\nScatter Plots: Show relationships between two continuous variables.\n\nLine Plots: Useful for time series data or connecting points in order.\n\nBar Charts: Display categorical data, includes regular and stacked bar charts.\n\nHistograms: Show the distribution of a continuous variable.\n\nBox Plots: Display distribution of a variable, showing quartiles and outliers.\n\nViolin Plots: Similar to box plots, but include a kernel density estimation.\n\nHeatmaps: Represent data where colors denote values.\n\nFacetted Plots: Support interactive facets, breaking down data into multiple panels.\n\nError Bars and Confidence Intervals: Added to plots like scatter plots or bar charts to represent data uncertainty.\n\nArea Plots: Showcase quantitative data visually.\n\nDensity Plots: Visualize the distribution of a continuous variable."
  }
]